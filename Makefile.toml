[config]
skip_core_tasks = true
default_to_workspace = false

[tasks.default]
alias = "build"

[tasks.clean]
mac_alias = "clean-mac"

[tasks.run]
dependencies = ["build-cli"]
command = "./target/debug/khiin_cli"

[tasks.build]
linux_alias = "build-linux"
mac_alias = "build-mac"
windows_alias = "build-windows"

[tasks.build-windows]
dependencies = ["build-cli", "build-win32-tip", "build-win32-settings"]

[tasks.build-win32-tip]
command = "cargo"
args = ["build", "--manifest-path=windows/ime/Cargo.toml"]
dependencies = ["db-copy-to-target"]

[tasks.build-win32-settings]
command = "cargo"
args = ["build", "--manifest-path=windows/settings/Cargo.toml"]

##################
#    Mac & iOS   #
##################

[tasks.build-mac]
dependencies = [
    "build-mac-libs",
    "build-mac-bindings",
    "build-mac-protos",
    "db-copy-mac",
    "build-cli",
]

[tasks.clean-mac]
script_runner = "@shell"
script = '''
rm -rf swift/EngineBindings/generated
'''
dependencies = ["clean-db"]

[tasks.build-mac-libs]
command = "cargo"
args = ["lipo", "--targets", "aarch64-apple-ios-sim,x86_64-apple-ios"]

[tasks.build-mac-bindings]
dependencies = ["mac-builddirs"]
command = "cbindgen"
args = [
    "--config",
    "swift/EngineBindings/cbindgen.toml",
    "--crate",
    "khiin_swift",
    "--output",
    "swift/EngineBindings/generated/khiin_swift.h",
]

[tasks.build-mac-protos]
dependencies = ["mac-builddirs"]
cwd = "protos/src"
script_runner = "@shell"
script = '''
protoc --swift_out=../../swift/EngineBindings/generated *.proto
'''

[tasks.mac-builddirs]
script_runner = "@shell"
script = '''
mkdir -p swift/EngineBindings/generated
'''

[tasks.db-copy-mac]
condition = { files_exist = ["resources/khiin.db"] }
script_runner = "@shell"
script = '''
cp resources/khiin.db swift/Khiin/khiin.db
'''
dependencies = ["db-copy"]

############
#  Linux   #
############

[tasks.build-linux]
dependencies = ["build-cli"]

[tasks.build-cli]
command = "cargo"
args = ["build", "--manifest-path=cli/Cargo.toml"]
dependencies = ["db-copy-to-target"]


############
# Database #
############

[tasks.db-rebuild]
dependencies = ["clean-db", "db-build"]

[tasks.clean-db]
condition = { files_exist = ["data/out/khiin.db"] }
script_runner = "@shell"
script = '''
rm data/out/khiin.db
rm resources/khiin.db
rm target/debug/khiin.db
'''

[tasks.db-build]
cwd = "data"
condition = { files_not_exist = ["out/khiin.db"] }
command = "python3"
args = [
    "src/sql_gen.py",
    "-f",
    "data/frequency.csv",
    "-c",
    "data/conversions_all.csv",
    "-s",
    "data/syllables.txt",
    "-t",
    "-y",
    "data/symbols.tsv",
    "-e",
    "data/emoji.csv",
    "-o",
    "out/khiin_db.sql",
    "-d",
    "out/khiin.db",
]

[tasks.db-copy-to-target]
condition = { files_exist = ["resources/khiin.db"] }
script_runner = "@shell"
script = '''
mkdir -p target/debug
cp resources/khiin.db target/debug/khiin.db
'''
dependencies = ["db-copy"]

[tasks.db-copy]
condition = { files_not_exist = ["resources/khiin.db"] }
dependencies = ["db-build"]
script_runner = "@shell"
script = '''
mkdir -p resources
cp data/out/khiin.db resources/khiin.db
'''
###########
#  Tests  #
###########

[tasks.test]
command = "cargo"
args = ["test", "--manifest-path=khiin/Cargo.toml"]

##############
# Formatting #
##############

[tasks.fmt]
dependencies = ["format-cli", "format-khiin", "format-windows"]

[tasks.format-cli]
command = "cargo"
toolchain = "nightly"
args = ["fmt", "--manifest-path=cli/Cargo.toml", "--", "--emit=files"]

[tasks.format-khiin]
command = "cargo"
toolchain = "nightly"
args = ["fmt", "--manifest-path=khiin/Cargo.toml", "--", "--emit=files"]

[tasks.format-windows]
dependencies = ["format-win32-ime", "format-win32-settings"]

[tasks.format-win32-ime]
command = "cargo"
toolchain = "nightly"
args = ["fmt", "--manifest-path=windows/ime/Cargo.toml", "--", "--emit=files"]

[tasks.format-win32-settings]
command = "cargo"
toolchain = "nightly"
args = [
    "fmt",
    "--manifest-path=windows/settings/Cargo.toml",
    "--",
    "--emit=files",
]
